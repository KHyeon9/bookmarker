# 기본 이미지 선택, 필요한 패키지 및 설정 파일을 이미지에 복사
FROM node:20-alpine as deps
# Alpine에는 기본 C 라이브러리가 없을 수 있어 호환성 라이브러리 설치
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json package-lock.json ./
# 프로덕션 환경용 의존성 설치(devDependency 제외)
RUN npm ci --omit=dev

# 빌더를 하기위한 내부 폴더 선택하고 필요 node_modules를 복사하고 빌드
FROM node:20-alpine as builder
WORKDIR /app

COPY . .
COPY --from=deps /app/node_modules ./node_modules
COPY .env.local .env.local

RUN npm run build

# 실행을 위한 이미지화 폴더를 선택하고 환경 설정을 한다.
FROM node:20-alpine as runner
WORKDIR /app

ENV NODE_ENV=production
# 컨테이너 안에 그룹 ID 1001인 nodejs라는 시스템 그룹 생성
RUN addgroup -g 1001 -S nodejs
# 컨테이너 안에 유저 ID 1001, 그룹 ID 1001인 nextjs라는 시스템 사용자 생성
RUN adduser -S -u 1001 -G nodejs nextjs

# 필요 파일 복사
COPY --from=builder /app/next.config.ts ./
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/.env.local .env.local

USER nextjs

EXPOSE 3000

CMD [ "npm", "start" ]