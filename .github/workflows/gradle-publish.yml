name: Build
# 어떤 브랜치에서든 push 시 실행
on:
  push:
    branches: [ "**" ]

jobs:
  # api action 설정
  build-bookmarker-api:
    name: Build bookmarker-api
    # ubuntu에서 실행
    runs-on: ubuntu-latest
    # bookmarker-api 폴더 안에서 실행되도록 설정
    defaults:
      run:
        working-directory: ./bookmarker-api

    steps:
      # 1️. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️. Gradle 캐시 설정
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          # 캐시 경로
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          # 접두사 - os 별 캐시 구분 - gradle 설정 파일 해시 및 build.gradle이나 wrapper가 바뀌면 새 캐시 생성
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          # 정확한 캐시기 없을시 os단위로 비슷한 캐시 사용
          restore-keys: gradle-${{ runner.os }}-

      # 4️. Gradle 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      # 5️. Docker 이미지 빌드 및 푸시 (main 브랜치 전용)
      - name: Build and Publish Docker Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          ./gradlew jib \
            --image=${{ secrets.DOCKER_USERNAME }}/bookmarker-api:5.0 \
            -Djib.to.auth.username=${{ secrets.DOCKER_USERNAME }} \
            -Djib.to.auth.password=${{ secrets.DOCKER_PASSWORD }}
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled
  # ui action 설정
  build-bookmarker-ui:
    name: Build bookmarker-ui
    # ubuntu에서 실행
    runs-on: ubuntu-latest
    # bookmarker-api 폴더 안에서 실행되도록 설정
    defaults:
      run:
        working-directory: ./bookmark-ui-nextjs

    steps:
      # 1️. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. node 설치
      - name: Set up Node.js 22.20.0
        uses: actions/setup-node@v4
        with:
          node-version: 22.20.0
      # 3. 의존성 설치 (npm ci)
      - name: Install dependencies
        run: npm ci
      # 4. env 파일 생성
      - name: Create .env.local
        run: |
          echo "NEXT_PUBLIC_CLIENT_SIDE_API_BASE_URL=${{ secrets.NEXT_PUBLIC_CLIENT_SIDE_API_BASE_URL }}"> .env.local
          echo "SERVER_SIDE_API_BASE_URL=${{ secrets.SERVER_SIDE_API_BASE_URL }}"> .env.local
      # 4. Next.js 빌드
      - name: Build
        run: npm run build
      # 5️. Docker 이미지 빌드 및 푸시 (main 브랜치 전용)
      - name: Build and Publish Docker Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile.ui -t ${{ secrets.DOCKER_USERNAME }}/bookmark-ui-nextjs:5.0
          docker push ${{ secrets.DOCKER_USERNAME }}/bookmark-ui-nextjs:5.0
